version: "3.3"
services:
    weather_frontend:    
        image: natalliakoita/weather_frontend:v1
        ports:
            - "8082:8082"
        networks:
            - weather
        depends_on: 
            - weather_backend
        environment:
            - HOST=${HOST}
    weather_backend:
        image: natalliakoita/weather_backend:v1
        ports:
            - "8080:8080"
        networks:
            - weather
        depends_on: 
            - db_weather
        environment:
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - KEY=${KEY}
    db_migrations:
        image: migrate/migrate
        container_name: db_weather_migrate
        networks:
            - weather
        volumes:
            - ./migrations:/migrations
        depends_on: 
            - db_weather
        restart: on-failure
        environment:
            - DATABASE_URL=${DATABASE_URL}
        env_file: 
            - .env
        command: ["-path", "/migrations", "-database", "postgresql://postgres:qwerty@db_weather:5432/weather?sslmode=disable", "up"]
    db_weather:
        restart: always
        image: postgres:13-alpine
        container_name: db_weather
        ports:
            - 5439:5432
        expose:
            - 5439
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        volumes:
            - ../data/postgres:/var/lib/postgresql/data
        env_file: 
            - .env
        networks:
            - weather
networks:
    weather: